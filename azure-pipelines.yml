
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
  

variables:
- group: amaSecrets
- name: offerName
  value: msalemdummymanagedoffer-preview


stages:
- stage: build
  displayName: 'Build & Publish'
  jobs:
  - job:
    steps:
      - task: DotNetCoreCLI@2
        displayName: 'dotnet Build'
        inputs:
          command: 'build'
          projects: '**/*.csproj'
        
     
      - task: DotNetCoreCLI@2
        displayName: 'dotnet publish'
        inputs:
          command: 'publish'
          publishWebProjects: true
          zipAfterPublish: true
          arguments: '--output $(Build.ArtifactStagingDirectory)'
          projects: '**/*.csproj'

      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
                cp subscriptionList.txt $(Build.ArtifactStagingDirectory)
                cp arm-delta/mainv2.json $(Build.ArtifactStagingDirectory)


      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'
          ArtifactName: 'webpackage'


- stage: UpdateManagedApp
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: 'Update Customer Managed App'
  jobs:
   - deployment: UpdateManagedApp
     environment: UpdateManagedApp
     strategy:
      runOnce:
        deploy:
          steps:
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                      
                      az login --service-principal -u $(CLIENTID) -p $(CLIENTSECRET) --tenant $(TENANT)
                      echo "Opening customer subscriptions List"
                      while read -r subscription
                       do
                          echo "Process Customer Subscription: $subscription"
                          az managedapp list --subscription $subscription --query "[?contains(plan.product,'$(OFFERNAME)')]" > offer.txt
                          cat offer.txt
                          echo "=================================================================================="
                          echo "Get Managed ResourceGroup"
                          echo "=================================================================================="
                          managedResourceGroupId=$(cat offer.txt |grep managedResourceGroupId)
                          managedResourceGroupId=$(awk -F'/' '{print $5}' <<< $managedResourceGroupId)
                          managedResourceGroupId=$(awk '{ print substr( $0, 1, length($0)-2 ) }' <<< $managedResourceGroupId)
                          echo $managedResourceGroupId
                          echo "=================================================================================="
                          echo " Get App Name "
                          echo "=================================================================================="
                          webAppName=$(cat offer.txt |grep  -A2 'webAppName' |grep 'value')
                          webAppName=$(awk -F ':' '{print $2}' <<< $webAppName)
                          webAppName=$(echo $webAppName | cut -d '"' -f 2)
                          echo $webAppName 
                          echo "=================================================================================="
                          echo " Get storageAccountPrefix "
                          echo "=================================================================================="
                          storageAccountPrefix=$(cat offer.txt |grep  -A2 'storageAccountPrefix' |grep 'value')
                          storageAccountPrefix=$(awk -F ':' '{print $2}' <<< $storageAccountPrefix)
                          storageAccountPrefix=$(echo $storageAccountPrefix | cut -d '"' -f 2)
                          echo $storageAccountPrefix
                          echo "=================================================================================="
                          echo " Get storageAccountType "
                          echo "=================================================================================="
                          storageAccountType=$(cat offer.txt |grep  -A2 'storageAccountType' |grep 'value')
                          storageAccountType=$(awk -F ':' '{print $2}' <<< $storageAccountType)
                          storageAccountType=$(echo $storageAccountType | cut -d '"' -f 2)
                          echo $storageAccountType
                          echo "=================================================================================="
                          echo " Get vmNamePrefix "
                          echo "=================================================================================="
                          vmNamePrefix=$(cat offer.txt |grep  -A2 'vmNamePrefix' |grep 'value')
                          vmNamePrefix=$(awk -F ':' '{print $2}' <<< $vmNamePrefix)
                          vmNamePrefix=$(echo $vmNamePrefix | cut -d '"' -f 2)
                          echo $vmNamePrefix
                          echo "=================================================================================="
                          echo " Get userName "
                          echo "=================================================================================="
                          userName=$(cat offer.txt |grep  -A2 'userName' |grep 'value')
                          userName=$(awk -F ':' '{print $2}' <<< $userName)
                          userName=$(echo $userName | cut -d '"' -f 2)
                          echo $userName
                          echo "=================================================================================="
                          echo " Get pwd "
                          echo "=================================================================================="
                          pwd=$(cat offer.txt |grep  -A2 'pwd' |grep 'value')
                          pwd=$(awk -F ':' '{print $2}' <<< $pwd)
                          pwd=$(echo $pwd | cut -d '"' -f 2)
                          echo $pwd
                          echo "=================================================================================="
                          echo " Get location "
                          echo "=================================================================================="
                          location=$(cat offer.txt |grep  -A2 'location' |grep 'value')
                          location=$(awk -F ':' '{print $2}' <<< $location)
                          location=$(echo $location | cut -d '"' -f 2)
                          echo $location
                          echo "=================================================================================="
                          echo " Run New Plan ARM file"
                          echo "=================================================================================="
                          az deployment group create --subscription $subscription --resource-group $managedResourceGroupId \
                            --template-file ../webpackage/mainv2.json \
                            --parameters location=$location storageAccountPrefix=$storageAccountPrefix storageAccountType=$storageAccountType vmNamePrefix=$vmNamePrefix userName=$userName pwd=$pwd webAppName=$webAppName
                          echo "=================================================================================="
                          echo " Push new artifact to webapp "
                          echo "=================================================================================="
                          az webapp config appsettings set --subscription $subscription  -g $managedResourceGroupId --name  $webAppName --setting WEBSITE_RUN_FROM_PACKAGE=1
                          az webapp deployment source config-zip --name  $webAppName --subscription $subscription  -g $managedResourceGroupId --src ../webpackage/src.zip
                        
                        done < ../webpackage/subscriptionList.txt
                        echo "Finished updating customer subscriptions"


                
                    